name: "Coding Standards"

on:
  pull_request:
    paths:
      - .github/workflows/coding-standards.yml
      - bin/**
      - composer.*
      - src/**
      - phpcs.xml
      - tests/**
    php-version:
      description: "The PHP version to use when running the job"
      default: "8.2"
      required: true
      type: "string"
    composer-root-version:
      description: "The version of the package being tested, in case of circular dependencies."
      required: false
      type: "string"
    composer-options:
      description: "Additional flags for the composer install command."
      default: "--prefer-dist"
      required: false
      type: "string"

  push:
    paths:
      - .github/workflows/coding-standards.yml
      - bin/**
      - composer.*
      - src/**
      - phpcs.xml.dist
      - tests/**
    php-version:
      description: "The PHP version to use when running the job"
      default: "8.2"
      required: true
      type: "string"
    composer-root-version:
      description: "The version of the package being tested, in case of circular dependencies."
      required: false
      type: "string"
    composer-options:
      description: "Additional flags for the composer install command."
      default: "--prefer-dist"
      required: false
      type: "string"

jobs:
  coding-standards:
    name: "Coding Standards"
    runs-on: "ubuntu-22.04"

    strategy:
      matrix:
        php-versions: ['8.1', '8.2']

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          php-version: "${{ matrix.php-versions }}"
          tools: "cs2pr"

      - name: "Set COMPOSER_ROOT_VERSION"
        run: |
          echo "COMPOSER_ROOT_VERSION=${{ inputs.composer-root-version }}" >> $GITHUB_ENV
        if: "${{ inputs.composer-root-version }}"

      - name: "Install dependencies with Composer"
        uses: "ramsey/composer-install@v2"
        with:
          dependency-versions: "highest"
          composer-options: "${{ inputs.composer-options }}"

      - name: "Run PHP_CodeSniffer"
        run: "vendor/bin/phpcs -q --no-colors --report=checkstyle | cs2pr"
